# github action workflow.
# # This workflow automates building and testing for the main and feature branches, including feature-searching.
# # This workflow is triggered on:
#  - Push events to the main branch and feature branches (e.g., feature-searching).
#  - Pull requests targeting the main branch.
# After triggering, it checks out the code, sets up Java (JDK 21), caches Maven dependencies, 
# and runs the Maven build to compile and test the project.

name: Build and Test Backend

on:
  # Trigger on push to main and feature branches
  push:
    branches:
      - main
      - feature-search

  # Trigger on pull requests targeting the main branch
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
      # Step 1: Check out the code
      - name: Check out code
        uses: actions/checkout@v3

      # Step 2: Set up JDK 21
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      # Step 3: Cache Maven dependencies
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2

      # Step 4: Build and Test
      - name: Build with Maven
        run: mvn clean install

      # Step 5: Decode SSL Certificate
      - name: Decode SSL Certificate
        run: |
          echo "${{ secrets.DB_SSL_CERT }}" | base64 -d > ca.pem
        shell: bash

      # Step 6: Connect to Aiven Database and Run SQL Commands
      - name: Connect to Aiven Database
        run: |
          mysql --ssl-ca=ca.pem -h $DB_HOST -P $DB_PORT -u $DB_USER -p$DB_PASSWORD -D $DB_NAME -e "SHOW TABLES;"
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
