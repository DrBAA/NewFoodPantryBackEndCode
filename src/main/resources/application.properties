# Reads database credentials from the .env file, providing a familiar configuration approach in Spring Boot

spring.application.name=MyFoodPantryAPI
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# spring.jpa.hibernate.ddl-auto=update - automatically updates the database schema to match your entity classes whenever you make changes

# JPA Configuration
spring.jpa.hibernate.ddl-auto=none
spring.jpa.open-in-view=true

spring.config.import=optional:./local.properties

# database connection credentials when using a cloud database via github actions
spring.datasource.url=${JDBC_DATABASE_URL}
spring.jpa.hibernate.dialect=org.hibernate.dialect.MySQLDialect


# database connection credentials when using a dot.env file

# spring.datasource.url=${DATASOURCE_URL}
# spring.datasource.username=${DATASOURCE_USER}
# spring.datasource.password=${DATASOURCE_PASSWORD}



# frontend.url=${FRONTEND_URL}

logging.level.org.springframework.web=DEBUG
logging.level.com.BethsProjects.MyFoodPantryAPI=DEBUG

# FOR detailed SQL and connection debugging logs:
logging.level.org.springframework=DEBUG
logging.level.com.zaxxer.hikari=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE



# # FOR CLOUD DATABASE
# spring.datasource.hikari.data-source-properties.ssl-mode=VERIFY_CA
# # spring.datasource.hikari.data-source-properties.trustCertificateKeyStoreUrl=file:${DATASOURCE_SSL_CA}
# spring.datasource.hikari.data-source-properties.trustCertificateKeyStoreUrl=classpath:certs/ca-certificate.crt
# spring.datasource.hikari.data-source-properties.useSSL=true
# spring.datasource.hikari.data-source-properties.requireSSL=true
# spring.datasource.hikari.data-source-properties.ssl-ca=file:${DATASOURCE_SSL_CA}
# spring.datasource.ssl.ca=${DATASOURCE_SSL_CA}
